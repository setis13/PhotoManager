//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("PhotoModel", "FolderAttribute", "Attribute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PhotoManager.Attribute), "Folder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PhotoManager.Folder))]
[assembly: EdmRelationshipAttribute("PhotoModel", "FK_ImageData_Folder", "Folder", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PhotoManager.Folder), "ImageData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PhotoManager.ImageData), true)]
[assembly: EdmRelationshipAttribute("PhotoModel", "FK_ImageData_ImageSize", "ImageSize", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PhotoManager.ImageSize), "ImageData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PhotoManager.ImageData), true)]

#endregion

namespace PhotoManager
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PhotoEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PhotoEntities object using the connection string found in the 'PhotoEntities' section of the application configuration file.
        /// </summary>
        public PhotoEntities() : base("name=PhotoEntities", "PhotoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PhotoEntities object.
        /// </summary>
        public PhotoEntities(string connectionString) : base(connectionString, "PhotoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PhotoEntities object.
        /// </summary>
        public PhotoEntities(EntityConnection connection) : base(connection, "PhotoEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Attribute> Attribute
        {
            get
            {
                if ((_Attribute == null))
                {
                    _Attribute = base.CreateObjectSet<Attribute>("Attribute");
                }
                return _Attribute;
            }
        }
        private ObjectSet<Attribute> _Attribute;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Folder> Folder
        {
            get
            {
                if ((_Folder == null))
                {
                    _Folder = base.CreateObjectSet<Folder>("Folder");
                }
                return _Folder;
            }
        }
        private ObjectSet<Folder> _Folder;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImageSize> ImageSize
        {
            get
            {
                if ((_ImageSize == null))
                {
                    _ImageSize = base.CreateObjectSet<ImageSize>("ImageSize");
                }
                return _ImageSize;
            }
        }
        private ObjectSet<ImageSize> _ImageSize;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImageData> ImageData
        {
            get
            {
                if ((_ImageData == null))
                {
                    _ImageData = base.CreateObjectSet<ImageData>("ImageData");
                }
                return _ImageData;
            }
        }
        private ObjectSet<ImageData> _ImageData;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Attribute EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttribute(Attribute attribute)
        {
            base.AddObject("Attribute", attribute);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Folder EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFolder(Folder folder)
        {
            base.AddObject("Folder", folder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImageSize EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImageSize(ImageSize imageSize)
        {
            base.AddObject("ImageSize", imageSize);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImageData EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImageData(ImageData imageData)
        {
            base.AddObject("ImageData", imageData);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PhotoModel", Name="Attribute")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Attribute : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Attribute object.
        /// </summary>
        /// <param name="attrId">Initial value of the AttrId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Attribute CreateAttribute(global::System.Byte attrId, global::System.String name)
        {
            Attribute attribute = new Attribute();
            attribute.AttrId = attrId;
            attribute.Name = name;
            return attribute;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte AttrId
        {
            get
            {
                return _AttrId;
            }
            set
            {
                if (_AttrId != value)
                {
                    OnAttrIdChanging(value);
                    ReportPropertyChanging("AttrId");
                    _AttrId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AttrId");
                    OnAttrIdChanged();
                }
            }
        }
        private global::System.Byte _AttrId;
        partial void OnAttrIdChanging(global::System.Byte value);
        partial void OnAttrIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PhotoModel", "FolderAttribute", "Folder")]
        public EntityCollection<Folder> Folder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Folder>("PhotoModel.FolderAttribute", "Folder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Folder>("PhotoModel.FolderAttribute", "Folder", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PhotoModel", Name="Folder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Folder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Folder object.
        /// </summary>
        /// <param name="folderId">Initial value of the FolderId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Folder CreateFolder(global::System.Int16 folderId, global::System.String name)
        {
            Folder folder = new Folder();
            folder.FolderId = folderId;
            folder.Name = name;
            return folder;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 FolderId
        {
            get
            {
                return _FolderId;
            }
            set
            {
                if (_FolderId != value)
                {
                    OnFolderIdChanging(value);
                    ReportPropertyChanging("FolderId");
                    _FolderId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FolderId");
                    OnFolderIdChanged();
                }
            }
        }
        private global::System.Int16 _FolderId;
        partial void OnFolderIdChanging(global::System.Int16 value);
        partial void OnFolderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TitleFile
        {
            get
            {
                return _TitleFile;
            }
            set
            {
                OnTitleFileChanging(value);
                ReportPropertyChanging("TitleFile");
                _TitleFile = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TitleFile");
                OnTitleFileChanged();
            }
        }
        private global::System.String _TitleFile;
        partial void OnTitleFileChanging(global::System.String value);
        partial void OnTitleFileChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PhotoModel", "FolderAttribute", "Attribute")]
        public EntityCollection<Attribute> Attribute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Attribute>("PhotoModel.FolderAttribute", "Attribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Attribute>("PhotoModel.FolderAttribute", "Attribute", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PhotoModel", "FK_ImageData_Folder", "ImageData")]
        public EntityCollection<ImageData> ImageData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ImageData>("PhotoModel.FK_ImageData_Folder", "ImageData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ImageData>("PhotoModel.FK_ImageData_Folder", "ImageData", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PhotoModel", Name="ImageData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImageData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImageData object.
        /// </summary>
        /// <param name="fileId">Initial value of the FileId property.</param>
        /// <param name="folderId">Initial value of the FolderId property.</param>
        /// <param name="sizeId">Initial value of the SizeId property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="data">Initial value of the Data property.</param>
        /// <param name="size">Initial value of the Size property.</param>
        public static ImageData CreateImageData(global::System.Int32 fileId, global::System.Int16 folderId, global::System.Byte sizeId, global::System.String fileName, global::System.Byte[] data, global::System.Int64 size)
        {
            ImageData imageData = new ImageData();
            imageData.FileId = fileId;
            imageData.FolderId = folderId;
            imageData.SizeId = sizeId;
            imageData.FileName = fileName;
            imageData.Data = data;
            imageData.Size = size;
            return imageData;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileId
        {
            get
            {
                return _FileId;
            }
            set
            {
                if (_FileId != value)
                {
                    OnFileIdChanging(value);
                    ReportPropertyChanging("FileId");
                    _FileId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FileId");
                    OnFileIdChanged();
                }
            }
        }
        private global::System.Int32 _FileId;
        partial void OnFileIdChanging(global::System.Int32 value);
        partial void OnFileIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 FolderId
        {
            get
            {
                return _FolderId;
            }
            set
            {
                OnFolderIdChanging(value);
                ReportPropertyChanging("FolderId");
                _FolderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FolderId");
                OnFolderIdChanged();
            }
        }
        private global::System.Int16 _FolderId;
        partial void OnFolderIdChanging(global::System.Int16 value);
        partial void OnFolderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte SizeId
        {
            get
            {
                return _SizeId;
            }
            set
            {
                OnSizeIdChanging(value);
                ReportPropertyChanging("SizeId");
                _SizeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SizeId");
                OnSizeIdChanged();
            }
        }
        private global::System.Byte _SizeId;
        partial void OnSizeIdChanging(global::System.Byte value);
        partial void OnSizeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Data
        {
            get
            {
                return StructuralObject.GetValidValue(_Data);
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.Byte[] _Data;
        partial void OnDataChanging(global::System.Byte[] value);
        partial void OnDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private global::System.Int64 _Size;
        partial void OnSizeChanging(global::System.Int64 value);
        partial void OnSizeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PhotoModel", "FK_ImageData_Folder", "Folder")]
        public Folder Folder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("PhotoModel.FK_ImageData_Folder", "Folder").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("PhotoModel.FK_ImageData_Folder", "Folder").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Folder> FolderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Folder>("PhotoModel.FK_ImageData_Folder", "Folder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Folder>("PhotoModel.FK_ImageData_Folder", "Folder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PhotoModel", "FK_ImageData_ImageSize", "ImageSize")]
        public ImageSize ImageSize
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImageSize>("PhotoModel.FK_ImageData_ImageSize", "ImageSize").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImageSize>("PhotoModel.FK_ImageData_ImageSize", "ImageSize").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ImageSize> ImageSizeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImageSize>("PhotoModel.FK_ImageData_ImageSize", "ImageSize");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ImageSize>("PhotoModel.FK_ImageData_ImageSize", "ImageSize", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PhotoModel", Name="ImageSize")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImageSize : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImageSize object.
        /// </summary>
        /// <param name="sizeId">Initial value of the SizeId property.</param>
        /// <param name="height">Initial value of the Height property.</param>
        /// <param name="width">Initial value of the Width property.</param>
        public static ImageSize CreateImageSize(global::System.Byte sizeId, global::System.Int16 height, global::System.Int16 width)
        {
            ImageSize imageSize = new ImageSize();
            imageSize.SizeId = sizeId;
            imageSize.Height = height;
            imageSize.Width = width;
            return imageSize;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte SizeId
        {
            get
            {
                return _SizeId;
            }
            set
            {
                if (_SizeId != value)
                {
                    OnSizeIdChanging(value);
                    ReportPropertyChanging("SizeId");
                    _SizeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SizeId");
                    OnSizeIdChanged();
                }
            }
        }
        private global::System.Byte _SizeId;
        partial void OnSizeIdChanging(global::System.Byte value);
        partial void OnSizeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Height
        {
            get
            {
                return _Height;
            }
            set
            {
                OnHeightChanging(value);
                ReportPropertyChanging("Height");
                _Height = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Height");
                OnHeightChanged();
            }
        }
        private global::System.Int16 _Height;
        partial void OnHeightChanging(global::System.Int16 value);
        partial void OnHeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private global::System.Int16 _Width;
        partial void OnWidthChanging(global::System.Int16 value);
        partial void OnWidthChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PhotoModel", "FK_ImageData_ImageSize", "ImageData")]
        public EntityCollection<ImageData> ImageData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ImageData>("PhotoModel.FK_ImageData_ImageSize", "ImageData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ImageData>("PhotoModel.FK_ImageData_ImageSize", "ImageData", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
